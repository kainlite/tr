---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleaner
  namespace: pipelines
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cleaner
  namespace: pipelines
rules:
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns"]
    verbs: ["delete", "get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cleaner-to-cleaner
  namespace: pipelines
roleRef:
  kind: Role
  name: cleaner
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: cleaner
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-pipelineruns
  namespace: pipelines
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccount: cleaner
          containers:
            - name: kubectl
              image: bitnami/kubectl:latest
              env:
              - name: NUM_TO_KEEP
                value: "3"
              command:
              - /bin/bash
              - -c
              - |
                  TO_DELETE="$(kubectl -n pipelines get pipelinerun -o jsonpath='{range .items[?(@.status.completionTime)]}{.status.completionTime}{" "}{.metadata.name}{"\n"}{end}' | sort | head -n -${NUM_TO_KEEP} | awk '{ print $2}')"
                  test -n "$TO_DELETE" && kubectl -n pipelines delete pipelinerun ${TO_DELETE} || true
